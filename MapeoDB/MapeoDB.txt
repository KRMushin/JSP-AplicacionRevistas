create schema app_revistas;
use app_revistas;

CREATE TABLE fotos_usuario (
    id_foto BIGINT AUTO_INCREMENT PRIMARY KEY, 
    foto_usuario VARCHAR(15), 
    foto BLOB
);
CREATE TABLE usuarios (
    nombre_usuario VARCHAR(15) NOT NULL UNIQUE PRIMARY KEY,
    password_usuario VARCHAR(200) NOT NULL,
    rol_usuario ENUM('COMPRADOR', 'SUSCRIPTOR', 'EDITOR', 'ADMINISTRADOR') NOT NULL,
    nombre_pila VARCHAR(100) NOT NULL,
    descripcion_usuario TEXT,
    id_foto BIGINT,
    FOREIGN KEY (id_foto) REFERENCES fotos_usuario(id_foto) ON DELETE SET NULL
);

CREATE TABLE preferencias_usuario (    
	id_preferencia BIGINT AUTO_INCREMENT PRIMARY KEY,      
	nombre_usuario VARCHAR(15),
	tipo_preferencia ENUM('HOBBIE', 'GUSTO', 'TEMA_PREFERENCIA') NOT NULL,      	 
	valor_preferencia VARCHAR(20) NOT NULL,      
	FOREIGN KEY (nombre_usuario) REFERENCES usuarios(nombre_usuario)  
);

CREATE TABLE carteras_digitales (
    usuario_representante VARCHAR(15) PRIMARY KEY, 
    saldo_disponible DECIMAL(10,2) NOT NULL DEFAULT 0.0,
    FOREIGN KEY (usuario_representante) REFERENCES usuarios(nombre_usuario)  
);




/*				EN FASE  DE ANALISIS						*/ 

CREATE TABLE ARCHIVOS_REVISTA (
    id_archivo BIGINT AUTO_INCREMENT PRIMARY KEY,
    archivo MEDIUMBLOB 

);
CREATE TABLE categorias (
    id_categoria BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre_categoria VARCHAR(50)UNIQUE NOT NULL  
);


CREATE TABLE revistas (
    id_revista BIGINT AUTO_INCREMENT PRIMARY KEY,
    id_archivo BIGINT NOT NULL,
    id_categoria BIGINT NOT NULL,    
    titulo_revista VARCHAR(50) NOT NULL, 
    nombre_autor VARCHAR(20),
    descripcion VARCHAR(100), 
    fechaCreacion DATE NOT NULL,
    costo_mantenimiento DECIMAL(10,2)  NOT NULL,
     precio_suscripcion DECIMAL(10, 2)NOT NULL,
    
    estado_revista ENUM('ACTIVA','INACTIVA','EN_ESPERA') NOT NULL,
    revista_comentable TINYINT(1) NOT NULL,
    revista_likeable TINYINT(1) NOT NULL,
    
    FOREIGN KEY (id_archivo) REFERENCES ARCHIVOS_REVISTA(id_archivo),
    FOREIGN KEY (id_categoria) REFERENCES categorias(id_categoria)
    
);
 

-- Tabla para almacenar comentarios de revistas
CREATE TABLE comentarios (
    id_comentario BIGINT AUTO_INCREMENT PRIMARY KEY,
    comentario TEXT, 
    nombre_usuario VARCHAR(20),
    id_revista BIGINT, 
    FOREIGN KEY (id_revista) REFERENCES revistas(id_revista)
);


-- Tabla intermedia para la relación muchos a muchos entre revistas y categorías
CREATE TABLE revista_categoria (
    id_revista BIGINT,
    id_categoria BIGINT,
    PRIMARY KEY (id_revista, id_categoria),
    FOREIGN KEY (id_revista) REFERENCES revistas(id_revista),
    FOREIGN KEY (id_categoria) REFERENCES categorias(id_categoria)
);

-- Tabla para almacenar etiquetas
CREATE TABLE etiquetas (
    id_etiqueta BIGINT AUTO_INCREMENT PRIMARY KEY,
    nombre_etiqueta VARCHAR(100) UNIQUE NOT NULL 
);

-- Tabla intermedia para la relación muchos a muchos entre revistas y etiquetas
CREATE TABLE revista_etiqueta (
    id_revista BIGINT, 
    id_etiqueta BIGINT, 
    PRIMARY KEY (id_revista, id_etiqueta),
    FOREIGN KEY (id_revista) REFERENCES revistas(id_revista),
    FOREIGN KEY (id_etiqueta) REFERENCES etiquetas(id_etiqueta)
);


CREATE TABLE likes_revistas (

    id_revista BIGINT, -- Llave foránea a la tabla revistas
    numero_likes INT DEFAULT 0,
    nombre_usuario VARCHAR(20),

    PRIMARY KEY (id_revista),
    FOREIGN KEY (id_revista) REFERENCES revistas(id_revista)
);


CREATE TABLE suscripciones (
    id_suscripcion INT AUTO_INCREMENT PRIMARY KEY,
    nombre_usuario VARCHAR(255), -- Llave foránea para la tabla usuarios
    id_revista INT, -- Llave foránea para la tabla revistas
    fecha_inicio DATE NOT NULL, -- Fecha de inicio de la suscripción
    fecha_vencimiento DATE, -- Fecha de vencimiento de la suscripción
    estado_pago ENUM('COMPLETADO') DEFAULT 'COMPLETADO', -- Estado del pago, siempre COMPLETADO si el usuario paga
    FOREIGN KEY (nombre_usuario) REFERENCES usuarios(nombre_usuario),
    FOREIGN KEY (id_revista) REFERENCES revistas(id_revista)
);

-- Tabla para almacenar el historial de likes de revistas
CREATE TABLE likes_revistas (

    id_revista BIGINT, -- Llave foránea a la tabla revistas
    numero_likes INT DEFAULT 0,

    PRIMARY KEY (id_revista),
    FOREIGN KEY (id_revista) REFERENCES revistas(id_revista)
);


